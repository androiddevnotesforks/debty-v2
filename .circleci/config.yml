# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
orbs:
  android: circleci/android@1.0.3

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:  
    working_directory: ~/project/android

    environment:
      JVM_OPTS: -Xmx3200m

    # These next lines define the Android machine image executor: https://circleci.com/docs/2.0/executor-types/
    executor:
      name: android/android-machine

    steps:
      # Checkout the code as the first step.
      - checkout:
          path: ~/project
      
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

      - run:
          name: chmod permissions
          command: chmod +x ./gradlew
      
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

      # The next step will run the unit tests
      - android/run-tests:
          test-command: ./gradlew lint testDebug --continue

      # Then start the emulator and run the Instrumentation tests!
      - android/start-emulator-and-run-tests:
          test-command: ./gradlew connectedDebugAndroidTest
          system-image: system-images;android-30;google_apis;x86

      # And finally run the release build
      - run:
          name: Assemble release build
          command: ./gradlew assembleRelease
      
      - store_artifacts:
          path: app/build/reports
          destination: reports
      
      - store_test_results:
          path: app/build/test-results


workflows:
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  build-deploy: 
    jobs:
      - build-and-test:
          filters:
            branches:
              only:
                - main
